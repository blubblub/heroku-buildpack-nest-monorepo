#!/usr/bin/env bash

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

indent() {
    sed -u 's/^/      /'
}

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"
STAGE="$(mktemp -d)"

if [ ! -f "${ENV_DIR}/NEST_APP" ]; then
    echo "NEST_APP was not set. Aborting" | indent
    exit 1
fi

NEST_APP="$(cat "${ENV_DIR}/NEST_APP")"
NEST_APP_DIR="apps/${NEST_APP}"

if [ ! -d "${BUILD_DIR}/${NEST_APP_DIR}" ]; then
    echo "NEST_APP does not exist: ${NEST_APP}. Ensure NestJS app is in apps directory. Aborting." | indent
    exit 1
fi

if [ ! -f "${BUILD_DIR}/package.json" ]; then
    echo "package.json does not exist: ${NEST_APP}. Ensure it is in root directory. Aborting." | indent
    exit 1
fi

declare -a SCRIPTS=(
  ".scripts.build = \"nest build $NEST_APP\""
  ".scripts.start = \"nest start $NEST_APP\""
  ".scripts.\"start:prod\" = \"node dist/apps/$NEST_APP/main\""
)

echo 'Patching package.json...'

for ((i = 0; i < ${#SCRIPTS[@]}; i++))
do
  SCRIPT="${SCRIPTS[$i]}"
  echo "Patch jq command: '$SCRIPT'"
  CMD="jq '$SCRIPT' package.json > tmp.$$.json && mv tmp.$$.json package.json"
  #echo $CMD
  eval "$CMD"
done

echo "Updated build, start and start:prod scripts in package.json with: $NEST_APP"

echo "Set up ${NEST_APP} at the root of Heroku app successfully" | indent

